/*
 * Generated by the whs31's ucc compiler (wucc)
 * Source file(s): {% for file in files %}
 *   - {{ file }}{% endfor %}
 *
 * Header: {{ filename }}.h
 * Source: {{ filename }}.cc
 *
 * Copyright (c) 2025 whs31
 * https://github.com/whs31/wucc
 * https://crate.io/crates/wucc
 *
 * DO NOT MODIFY. THIS FILE IS AUTO-GENERATED BY THE BUILD SYSTEM
 */

#include <array>
#include <cstdint>
#include "{{ filename }}.rc.h"

namespace {{ namespace }} {
  {% for (stem, data) in text_data %}
    auto constexpr {{ stem }}_c_str = R"WUCC_DELIMITER({{ data }})WUCC_DELIMITER";

    std::string_view {{ stem }}() noexcept {
      return {{ stem }}_c_str;
    }
  {% endfor %}
  {% for (stem, (len, data)) in binary_data %}
    auto constexpr {{ stem }}_data = std::array<std::uint8_t const, {{ len }}>{
      {{ data | indent(6) }}
    };

    std::span<std::byte const> {{ stem }}() noexcept {
      return std::span<std::byte const>(reinterpret_cast<std::byte const*>({{ stem }}_data.data()), {{ len }});
    }
  {% endfor %}
} // namespace {{ namespace }}